version: 2.1

parameters:
  ros-distro:
    type: string
    default: "humble"

jobs:
  restore_submodules:
    docker:
      - image: malasiot/sestosenso-certh-grasp-planner:latest
    resource_class: medium
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "SHA256:gQeR8j4SUkxL9i4AJcT0pMyqm2y4v6orATFQv8lX6q4"
      - run:
          name: "Update"
          command: sudo apt update 
      - run:
          name: Restore Submodules
          command: |
            git submodule sync && git submodule update --init
      - persist_to_workspace:
          root: .
          paths:
            - src
  build:
    docker:
      - image: malasiot/sestosenso-certh-grasp-planner:latest
    resource_class: large
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            vcs import src < src/grasp_planner/grasp_planner.repos
            vcs import src < src/iiwa_ros2/iiwa_ros2.repos
            source /opt/ros/<< pipeline.parameters.ros-distro >>/setup.bash
            rosdep update
            rosdep install --from-paths src -y --ignore-src
      - run:
          name: Build
          command: |
            source /opt/ros/<< pipeline.parameters.ros-distro >>/setup.bash
            colcon build --executor sequential
      - persist_to_workspace:
          root: .
          paths:
            - build
            - install
     
 
  test:
    docker:
      - image: ros:<< pipeline.parameters.ros-distro >>-ros-base
    steps:
      - checkout
      - attach_workspace:
          at: "ros_ws/"
      - run:
          name: Test
          command : |
            source /opt/ros/<< pipeline.parameters.ros-distro >>/setup.bash
            cd ros_ws/
            colcon test
            colcon test-result --verbose

  lint:
    docker:
      - image: cimg/base:current-22.04
    steps:
      - checkout
      - run:
          name: Install pip
          command: |
            sudo apt update
            sudo apt install python3-pip
      - run:
          name: Install cpplint
          command: pip install cpplint
      - run:
          name: Run cpplint
          command: cpplint --recursive "ros_ws/src" || (echo "Please make sure the pre-commit hooks are installed correctly and cpplint is installed locally. This will ensure linting errors are resolved before committing" && exit 1)
  
# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  build_test_lint:
    jobs:
      - lint
      - restore_submodules:
          requires:
            - lint
      - build:
          requires:
            - restore_submodules
      - test:
          requires:
            - build